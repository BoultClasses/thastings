 @inproceedings{General, title={Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440}, publisher={ACM}, author={General Chair-Crnkovic, Ivica and Conference Chair-Chaudron, Michel and Program Chair-Chechik, Marsha and Program Chair-Harman, Mark}, year={2018}, month={May} }
 @inproceedings{Agrawal_Rahman_Krishna_Sobran_Menzies_2018, place={New York, NY, USA}, series={ICSE-SEIP ’18}, title={We Don’T Need Another Hero?: The Impact of “Heroes” on Software Development}, ISBN={978-1-4503-5659-6}, url={http://doi.acm.org/10.1145/3183519.3183549}, DOI={10.1145/3183519.3183549}, booktitle={Proceedings of the 40th International Conference on Software Engineering: Software Engineering in Practice}, publisher={ACM}, author={Agrawal, Amritanshu and Rahman, Akond and Krishna, Rahul and Sobran, Alexander and Menzies, Tim}, year={2018}, pages={245–253}, collection={ICSE-SEIP ’18} }
 @inproceedings{Alexandre_Santos_2018, title={PBL planner toolkit: a canvas-based tool for planning PBL in software engineering education}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195060}, DOI={10.1145/3183440.3195060}, publisher={ACM}, author={Alexandre, Gustavo H. S. and Santos, Simone C.}, year={2018}, month={May}, pages={153–154} }
 @inproceedings{Bagherzadeh_Hili_Seekatz_Dingel_2018, title={MDebugger: a model-level debugger for UML-RT}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183473}, DOI={10.1145/3183440.3183473}, publisher={ACM}, author={Bagherzadeh, Mojtaba and Hili, Nicolas and Seekatz, David and Dingel, Juergen}, year={2018}, month={May}, pages={97–100} }
 @inproceedings{Balaban_Sturm_2018, place={New York, NY, USA}, series={ICSE-SEET ’18}, title={Software Engineering Lab: An Essential Component of a Software Engineering Curriculum}, ISBN={978-1-4503-5660-2}, url={http://doi.acm.org/10.1145/3183377.3183395}, DOI={10.1145/3183377.3183395}, abstractNote={The goal of Software Engineering (SE) education is to teach theory and practice of software sciences, with an ultimate practical goal. Quite surprisingly, although standard SE programs include many hands-on courses, they do not include practical lab courses in software development and maintenance, as common in other engineering disciplines. A capstone project course, that is standard in most SE programs, cannot function as an instructive SE-lab course since it does not enable effective teaching and cannot replace a planned SE-development experiment. This paper describes an SE-lab course that creates lab conditions, where students are faced with a deliberately challenging, planned SE development and management tasks, and the course staff provides team-based guidance. The paper analyzes the lab ideals, principles and goals, explains how they are realized in the lab content, and presents its evaluation from the students and the instructors’ viewpoints.}, note={Time: 225 seconds. The authors discuss a lab model they use to teach SE to students. They talk about some of the difficiluties with labs and how they built a lab env that works for them and makes grading easier.}, booktitle={Proceedings of the 40th International Conference on Software Engineering: Software Engineering Education and Training}, publisher={ACM}, author={Balaban, Mira and Sturm, Arnon}, year={2018}, pages={21–30}, collection={ICSE-SEET ’18} }
 @inproceedings{Barn_Barn_2018, place={Gothenburg, Sweden}, title={Towards a unified conceptual model for surveillance theories}, ISBN={978-1-4503-5661-9}, url={https://doi.org/10.1145/3183428.3183429}, abstractNote={The erosion of values such as privacy can be a critical factor in preventing the acceptance of new innovative technology especially in challenging environments such as the criminal justice system. Erosion of privacy happens through either deliberate or inadvertent surveillance. Since Bentham’s original liberal project in the 1900s, a literature and a whole study area around theories of surveillance has developed. Increasingly this general body of work has focussed on the role of information technology as a vehicle for surveillance activity. Despite an abundance of knowledge, a uni!ed view of key surveillance concepts that is useful to designers of information systems in preventing or reducing unintended surveillance remains elusive. This paper contributes a conceptual model that synthesises the gamut of surveillance theories as a !rst step to a theory building effort for use by Information Systems professionals. The model is evaluated using a design science research paradigm using data from both examples of surveillance and a recently completed research project that developed technology for the UK youth justice system.}, note={Time: 176 seconds. The authors write about a collection of papers and make a model that orginizations and IT professionals can use to describe threats to privacy. The authors say that there needs to be a standard model with standard verbage to use in the community. They deliver a standard UML diagram scheme.}, booktitle={ICSE-SEIS’18: Proceedings of the 40th International Conference on Software Engineering: Software Engineering in Society Track}, publisher={ACM}, author={Barn, Balbir and Barn, Ravinder}, year={2018}, month={Feb} }
 @inproceedings{Bergande_Brune_2018, title={When students meet developers: are barcamps a format for interactive software engineering education?}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195051}, DOI={10.1145/3183440.3195051}, publisher={ACM}, author={Bergande, Bianca and Brune, Philipp}, year={2018}, month={May}, pages={135–136} }
 @inproceedings{Budhiraja_Reddy_Shrivastava_2018, title={LWE: LDA refined word embeddings for duplicate bug report detection}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195078}, DOI={10.1145/3183440.3195078}, publisher={ACM}, author={Budhiraja, Amar and Reddy, Raghu and Shrivastava, Manish}, year={2018}, month={May}, pages={165–166} }
 @inproceedings{Cai_Jenkins_2018, title={Towards sustainable Android malware detection}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195004}, DOI={10.1145/3183440.3195004}, publisher={ACM}, author={Cai, Haipeng and Jenkins, John}, year={2018}, month={May}, pages={350–351} }
 @inproceedings{Chen_Zheng_Ma_He_Zheng_Zhou_2018, title={Efficient blockchain-based software systems via hierarchical bucket tree}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195009}, DOI={10.1145/3183440.3195009}, publisher={ACM}, author={Chen, Weili and Zheng, Zibin and Ma, Mingjie and He, Pinjia and Zheng, Peilin and Zhou, Yuren}, year={2018}, month={May}, pages={360–361} }
 @inproceedings{Chen_Wu_Wei_Sheng_2018, title={Deciding weak monitorability for runtime verification}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195077}, DOI={10.1145/3183440.3195077}, publisher={ACM}, author={Chen, Zhe and Wu, Yifan and Wei, Ou and Sheng, Bin}, year={2018}, month={May}, pages={163–164} }
 @inproceedings{Cito_Leitner_Bosshard_Knecht_Mazlami_Gall_2018, title={PerformanceHat: augmenting source code with runtime performance traces in the IDE}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183481}, DOI={10.1145/3183440.3183481}, publisher={ACM}, author={Cito, Jürgen and Leitner, Philipp and Bosshard, Christian and Knecht, Markus and Mazlami, Genc and Gall, Harald C.}, year={2018}, month={May}, pages={41–44} }
 @inproceedings{Coman_Sillitti_Succi_2018, title={An initial characterization of bug-injecting development sessions}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195069}, DOI={10.1145/3183440.3195069}, publisher={ACM}, author={Coman, Irina Diana and Sillitti, Alberto and Succi, Giancarlo}, year={2018}, month={May}, pages={129–130} }
 @inproceedings{Cuadrado_Guerra_de_Lara_2018, title={AnATLyzer: an advanced IDE for ATL model transformations}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183479}, DOI={10.1145/3183440.3183479}, publisher={ACM}, author={Cuadrado, Jesús Sánchez and Guerra, Esther and de Lara, Juan}, year={2018}, month={May}, pages={85–88} }
 @inproceedings{D’Angelo_Napolitano_Caporuscio_2018, title={CyPhEF: a model-driven engineering framework for self-adaptive cyber-physical systems}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183483}, DOI={10.1145/3183440.3183483}, publisher={ACM}, author={D’Angelo, Mirko and Napolitano, Annalisa and Caporuscio, Mauro}, year={2018}, month={May}, pages={101–104} }
 @inproceedings{Do_Krüger_Hill_Ali_Bodden_2018, title={VISUFLOW: a debugging environment for static analyses}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183470}, DOI={10.1145/3183440.3183470}, publisher={ACM}, author={Do, Lisa Nguyen Quang and Krüger, Stefan and Hill, Patrick and Ali, Karim and Bodden, Eric}, year={2018}, month={May}, pages={89–92} }
 @inproceedings{Dueñas_Cosentino_Robles_Gonzalez-Barahona_2018, title={Perceval: software project data at your will}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183475}, DOI={10.1145/3183440.3183475}, publisher={ACM}, author={Dueñas, Santiago and Cosentino, Valerio and Robles, Gregorio and Gonzalez-Barahona, Jesus M.}, year={2018}, month={May}, pages={1–4} }
 @inproceedings{Golagha_Raisuddin_Mittag_Hellhake_Pretschner_2018, title={Aletheia: a failure diagnosis toolchain}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183486}, DOI={10.1145/3183440.3183486}, publisher={ACM}, author={Golagha, Mojdeh and Raisuddin, Abu Mohammed and Mittag, Lennart and Hellhake, Dominik and Pretschner, Alexander}, year={2018}, month={May}, pages={13–16} }
 @inproceedings{Greco_Haden_Damevski_2018, title={StackInTheFlow: behavior-driven recommendation system for stack overflow posts}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183477}, DOI={10.1145/3183440.3183477}, publisher={ACM}, author={Greco, Chase and Haden, Tyler and Damevski, Kostadin}, year={2018}, month={May}, pages={5–8} }
 @inproceedings{Groce_Holmes_Marinov_Shi_Zhang_2018, title={An extensible, regular-expression-based tool for multi-language mutant generation}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183485}, DOI={10.1145/3183440.3183485}, publisher={ACM}, author={Groce, Alex and Holmes, Josie and Marinov, Darko and Shi, August and Zhang, Lingming}, year={2018}, month={May}, pages={25–28} }
 @inproceedings{Heinrich_Werle_Klare_Reussner_Kramer_Becker_Happe_Koziolek_Krogmann_2018, title={The palladio-bench for modeling and simulating software architectures}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183474}, DOI={10.1145/3183440.3183474}, publisher={ACM}, author={Heinrich, Robert and Werle, Dominik and Klare, Heiko and Reussner, Ralf and Kramer, Max and Becker, Steffen and Happe, Jens and Koziolek, Heiko and Krogmann, Klaus}, year={2018}, month={May}, pages={37–40} }
 @inproceedings{Hotomski_Glinz_2018, title={GuideGen: a tool for keeping requirements and acceptance tests aligned}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183484}, DOI={10.1145/3183440.3183484}, publisher={ACM}, author={Hotomski, Sofija and Glinz, Martin}, year={2018}, month={May}, pages={49–52} }
 @inproceedings{Hu_Song_Gehringer_2018, place={New York, NY, USA}, series={ICSE-SEET ’18}, title={Open-source Software in Class: Students’ Common Mistakes}, ISBN={978-1-4503-5660-2}, url={http://doi.acm.org/10.1145/3183377.3183394}, DOI={10.1145/3183377.3183394}, abstractNote={Introducing Open Source Software (OSS) projects into a software-engineering course has many advantages, for instance, allowing students to learn good coding practices from real-world projects, and giving students a glimpse of a real project. However, it is not easy for instructors to induce one or more OSS core teams to lend support for course projects. The alternative is to have students work on “toy features”---features for these projects not specified by OSS core teams, but by teaching staff. However, the project may be unimportant to the OSS project or may disrupt its design, making those code contributions unlikely to be integrated into the OSS code repository. In this paper, we, as both teaching staff and the core team for one OSS project called Expertiza, discuss our experience in supporting 700 students on 313 OSS-based course projects in the past five years. We manually checked these course projects, and summarize 13 common mistakes that frequently occur in students’ contributions, such as not following the existing design or messy pull requests. We propose five suggestions to help students reduce the frequency of common mistakes and improve the quality of their OSS pull requests.}, note={Time: 301 seconds. The authors talk about how teachers can bring open source projects into the classroom. They dicuss some of the issues with having students contribute to the projects and how to help students be more effecient.}, booktitle={Proceedings of the 40th International Conference on Software Engineering: Software Engineering Education and Training}, publisher={ACM}, author={Hu, Zhewei and Song, Yang and Gehringer, Edward F.}, year={2018}, pages={40–48}, collection={ICSE-SEET ’18} }
 @inproceedings{Juhnke_Tichy_Houdek_2018, title={Challenges with automotive test case specifications}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195070}, DOI={10.1145/3183440.3195070}, publisher={ACM}, author={Juhnke, Katharina and Tichy, Matthias and Houdek, Frank}, year={2018}, month={May}, pages={131–132} }
 @inproceedings{Klotins_Unterkalmsteiner_Chatzipetrou_Gorschek_Prikladnicki_Tripathi_Pompermaier_2018, place={New York, NY, USA}, series={ICSE-SEIP ’18}, title={Exploration of Technical Debt in Start-ups}, ISBN={978-1-4503-5659-6}, url={http://doi.acm.org/10.1145/3183519.3183539}, DOI={10.1145/3183519.3183539}, abstractNote={Context: Software start-ups are young companies aiming to build and market software-intensive products fast with little resources. Aiming to accelerate time-to-market, start-ups often opt for ad-hoc engineering practices, make shortcuts in product engineering, and accumulate technical debt. Objective: In this paper we explore to what extent precedents, dimensions and outcomes associated with technical debt are prevalent in start-ups. Method: We apply a case survey method to identify aspects of technical debt and contextual information characterizing the engineering context in start-ups. Results: By analyzing responses from 86 start-up cases we found that start-ups accumulate most technical debt in the testing dimension, despite attempts to automate testing. Furthermore, we found that start-up team size and experience is a leading precedent for accumulating technical debt: larger teams face more challenges in keeping the debt under control. Conclusions: This study highlights the necessity to monitor levels of technical debt and to preemptively introduce practices to keep the debt under control. Adding more people to an already difficult to maintain product could amplify other precedents, such as resource shortages, communication issues and negatively affect decisions pertaining to the use of good engineering practices.}, booktitle={Proceedings of the 40th International Conference on Software Engineering: Software Engineering in Practice}, publisher={ACM}, author={Klotins, Eriks and Unterkalmsteiner, Michael and Chatzipetrou, Panagiota and Gorschek, Tony and Prikladnicki, Rafael and Tripathi, Nirnaya and Pompermaier, Leandro Bento}, year={2018}, pages={75–84}, collection={ICSE-SEIP ’18} }
 @inproceedings{Knobloch_Kaltenbach_Bruegge_2018, place={New York, NY, USA}, series={ICSE-SEET ’18}, title={Increasing Student Engagement in Higher Education Using a Context-aware Q&A Teaching Framework}, ISBN={978-1-4503-5660-2}, url={http://doi.acm.org/10.1145/3183377.3183389}, DOI={10.1145/3183377.3183389}, abstractNote={Modeling in Software Engineering is a complex task which includes interaction and discussion. Often multiple iterations are needed to end up with a satisfying design to handle given problems like complexity or change. This behavior can also be seen in education in software engineering, where learners tend to iterate over their models after having multiple discussions with their instructors or peers about possible solutions. This is an important part of the learning process, however, it is increasingly harder to implement for large scale on campus courses due to high student to lecturer ratios. One of the biggest problems is that lecturers are not able to allocate their time during class to support all students equally. This issue leads to new teaching methodologies and automated or semi-automated tools to support in-class interaction of students. However, these tools are lacking an automated mapping between questions asked and the teaching context provided. This context has to be inserted manually or is implicitly available during the lecture, however is lost after the lecture is over. In this paper we describe the adaption of a lecture-style instruction and the introduction of a context-aware Q&A teaching framework to increase student interaction by parallelizing it with content delivery. We achieve this while also lowering barriers for students to participate, even in multi-classroom setups. The stated approach also allows the creation of a knowledge repository which persists student interaction including its teaching context. This repository can be used by students to prepare for upcoming exams as well as by instructors to optimize their teaching content. Using our approach, we are able to show that there is an increase in student participation, leading to increased student examination performance for active students.}, note={Time: 434 seconds. The authors talk about creating a knowledge repository for students to use for exams. The authors want to use the knowledge repository for use with lectures so students have something to look back on and study.}, booktitle={Proceedings of the 40th International Conference on Software Engineering: Software Engineering Education and Training}, publisher={ACM}, author={Knobloch, Jan and Kaltenbach, Jonas and Bruegge, Bernd}, year={2018}, pages={136–145}, collection={ICSE-SEET ’18} }
 @inproceedings{Kochhar_Swierc_Carnahan_Sajnani_Nagappan_2018, title={Understanding the role of reporting in work item tracking systems for software development: an industrial case study}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195071}, DOI={10.1145/3183440.3195071}, publisher={ACM}, author={Kochhar, Pavneet Singh and Swierc, Stanislaw and Carnahan, Trevor and Sajnani, Hitesh and Nagappan, Meiyappan}, year={2018}, month={May}, pages={133–134} }
 @inproceedings{Pull_Request_Study, title={Studying pull request merges: a case study of shopify’s active merchant}, ISBN={978-1-4503-5659-6}, url={http://dl.acm.org/citation.cfm?id=3183519.3183542}, DOI={10.1145/3183519.3183542}, note={Time: 332 seconds. The authors talk about pull requests and aim to understand how a large software project manages pull requests and pull request methodologies.}, publisher={ACM}, author={Kononenko, Oleksii and Rose, Tresa and Baysal, Olga and Godfrey, Michael and Theisen, Dennis and de Water, Bart}, year={2018}, month={May}, pages={124–133} }
 @inproceedings{Kröher_El-Sharkawy_Schmid_2018, title={KernelHaven: an experimentation workbench for analyzing software product lines}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183480}, DOI={10.1145/3183440.3183480}, publisher={ACM}, author={Kröher, Christian and El-Sharkawy, Sascha and Schmid, Klaus}, year={2018}, month={May}, pages={73–76} }
 @inproceedings{Li_Chen_Hassan_Nasser_Flora_2018, place={New York, NY, USA}, series={ICSE-SEIP ’18}, title={Adopting Autonomic Computing Capabilities in Existing Large-scale Systems: An Industrial Experience Report}, ISBN={978-1-4503-5659-6}, url={http://doi.acm.org/10.1145/3183519.3183544}, DOI={10.1145/3183519.3183544}, abstractNote={In current DevOps practice, developers are responsible for the operation and maintenance of software systems. However, the human costs for the operation and maintenance grow fast along with the increasing functionality and complexity of software systems. Autonomic computing aims to reduce or eliminate such human intervention. However, there are many existing large systems that did not consider autonomic computing capabilities in their design. Adding autonomic computing capabilities to these existing systems is particularly challenging, because of 1) the significant amount of efforts that are required for investigating and refactoring the existing code base, 2) the risk of adding additional complexity, and 3) the difficulties for allocating resources while developers are busy adding core features to the system. In this paper, we share our industrial experience of re-engineering autonomic computing capabilities to an existing large-scale software system. Our autonomic computing capabilities effectively reduce human intervention on performance configuration tuning and significantly improve system performance. In particular, we discuss the challenges that we encountered and the lessons that we learned during this re-engineering process. For example, in order to minimize the change impact to the original system, we use a variety of approaches (e.g., aspect-oriented programming) to separate the concerns of autonomic computing from the original behaviour of the system. We also share how we tested such autonomic computing capabilities under different conditions, which has never been discussed in prior work. As there are numerous large-scale software systems that still require expensive human intervention, we believe our experience provides valuable insights to software practitioners who wish to add autonomic computing capabilities to these existing large-scale software systems.}, note={Time: 126 seconds. The authors dicuss adding autonomic computing capabilities to exisiting applications. The authors discuss their experience working with a large system (which they don’t name) and how they added monitoring and metrics.}, booktitle={Proceedings of the 40th International Conference on Software Engineering: Software Engineering in Practice}, publisher={ACM}, author={Li, Heng and Chen, Tse-Hsun (Peter) and Hassan, Ahmed E. and Nasser, Mohamed and Flora, Parminder}, year={2018}, pages={1–10}, collection={ICSE-SEIP ’18} }
 @inproceedings{Li_Zhu_Rubin_Chechik_2018, title={CSlicerCloud: a web-based semantic history slicing framework}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183491}, DOI={10.1145/3183440.3183491}, publisher={ACM}, author={Li, Yi and Zhu, Chenguang and Rubin, Julia and Chechik, Marsha}, year={2018}, month={May}, pages={57–60} }
 @inproceedings{Liu_Liu_Cao_Chen_Chen_Roscoe_2018, title={ReGuard: finding reentrancy bugs in smart contracts}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183495}, DOI={10.1145/3183440.3183495}, publisher={ACM}, author={Liu, Chao and Liu, Han and Cao, Zhao and Chen, Zhong and Chen, Bangdao and Roscoe, Bill}, year={2018}, month={May}, pages={65–68} }
 @inproceedings{Liu_Huang_Xia_Shihab_Lo_Li_2018, title={SATD detector: a text-mining-based self-admitted technical debt detection tool}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183478}, DOI={10.1145/3183440.3183478}, publisher={ACM}, author={Liu, Zhongxin and Huang, Qiao and Xia, Xin and Shihab, Emad and Lo, David and Li, Shanping}, year={2018}, month={May}, pages={9–12} }
 @inproceedings{Mdroud_mutation, title={MDroid+: a mutation testing framework for android}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183492}, DOI={10.1145/3183440.3183492}, publisher={ACM}, author={Moran, Kevin and Tufano, Michele and Bernal-Cárdenas, Carlos and Linares-Vásquez, Mario and Bavota, Gabriele and Vendome, Christopher and Di Penta, Massimiliano and Poshyvanyk, Denys}, year={2018}, month={May}, pages={33–36} }
 @inproceedings{Mukelabai_Behringer_Fey_Palz_Krüger_Berger_2018, title={Multi-view editing of software product lines with PEoPL}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183499}, DOI={10.1145/3183440.3183499}, publisher={ACM}, author={Mukelabai, Mukelabai and Behringer, Benjamin and Fey, Moritz and Palz, Jochen and Krüger, Jacob and Berger, Thorsten}, year={2018}, month={May}, pages={81–84} }
 @inproceedings{Nagy_Cleve_2018, title={SQLInspect: a static analyzer to inspect database usage in Java applications}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183496}, DOI={10.1145/3183440.3183496}, publisher={ACM}, author={Nagy, Csaba and Cleve, Anthony}, year={2018}, month={May}, pages={93–96} }
 @inproceedings{Nam_Lee_Medvidovic_2018, title={EVA: a tool for visualizing software architectural evolution}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183490}, DOI={10.1145/3183440.3183490}, publisher={ACM}, author={Nam, Daye and Lee, Youn Kyu and Medvidovic, Nenad}, year={2018}, month={May}, pages={53–56} }
 @inproceedings{Rahman_Roy_2018, title={Improving bug localization with report quality dynamics and query reformulation}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195003}, DOI={10.1145/3183440.3195003}, publisher={ACM}, author={Rahman, Mohammad Masudur and Roy, Chanchai K.}, year={2018}, month={May}, pages={348–349} }
 @inproceedings{Saha_Yoshida_Prasad_Tokumoto_Takayama_Nanba_2018, title={Elixir: an automated repair tool for Java programs}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183487}, DOI={10.1145/3183440.3183487}, publisher={ACM}, author={Saha, Ripon K. and Yoshida, Hiroaki and Prasad, Mukul R. and Tokumoto, Susumu and Takayama, Kuniharu and Nanba, Isao}, year={2018}, month={May}, pages={77–80} }
 @inproceedings{Santos_Sales_Fernandes_Kroll_2018, title={Challenge-based learning: a brazilian case study}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195061}, DOI={10.1145/3183440.3195061}, publisher={ACM}, author={Santos, Alan and Sales, Afonso and Fernandes, Paulo and Kroll, Josiane}, year={2018}, month={May}, pages={155–156} }
 @inproceedings{Sentilles_Ciccozzi_Papatheocharous_2018, title={PROMOpedia: a web-content management-based encyclopedia of software property models}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183482}, DOI={10.1145/3183440.3183482}, publisher={ACM}, author={Sentilles, Séverine and Ciccozzi, Federico and Papatheocharous, Efi}, year={2018}, month={May}, pages={45–48} }
 @inproceedings{Wang_Jiang_Zhao_Song_Gu_Sun_2018, title={Weak-assert: a weakness-oriented assertion recommendation toolkit for program analysis}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183471}, DOI={10.1145/3183440.3183471}, publisher={ACM}, author={Wang, Cong and Jiang, Yu and Zhao, Xibin and Song, Xiaoyu and Gu, Ming and Sun, Jiaguang}, year={2018}, month={May}, pages={69–72} }
 @inproceedings{Wang_Sullivan_Khurshid_2018, title={MuAlloy: a mutation testing framework for alloy}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183488}, DOI={10.1145/3183440.3183488}, publisher={ACM}, author={Wang, Kaiyuan and Sullivan, Allison and Khurshid, Sarfraz}, year={2018}, month={May}, pages={29–32} }
 @inproceedings{Wang_Liang_Chen_Jiang_Jiao_Liu_Zhao_Sun_2018, title={SAFL: increasing and accelerating testing coverage with symbolic execution and guided fuzzing}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3183494}, DOI={10.1145/3183440.3183494}, publisher={ACM}, author={Wang, Mingzhe and Liang, Jie and Chen, Yuanliang and Jiang, Yu and Jiao, Xun and Liu, Han and Zhao, Xibin and Sun, Jiaguang}, year={2018}, month={May}, pages={61–64} }
 @inproceedings{Watanabe_Sato_Miwa_Imamura_Hosoai_Ogura_Nakamura_Hisazumi_2018, title={Multidisciplinary skill assessment for embedded software development education via a robot contest}, ISBN={978-1-4503-5663-3}, url={http://dl.acm.org/citation.cfm?id=3183440.3195059}, DOI={10.1145/3183440.3195059}, publisher={ACM}, author={Watanabe, Harumi and Sato, Mikiko and Miwa, Masafumi and Imamura, Makoto and Hosoai, Shintaro and Ogura, Nobuhiko and Nakamura, Hiroyuki and Hisazumi, Kenji}, year={2018}, month={May}, pages={151–152} }
